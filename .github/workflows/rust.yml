name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  c_build:
    name: Check upstream C library
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build C library
      run: python buildall.py

  rust_format:
    name: Check Rust formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ittapi-rs
    steps:
    - uses: actions/checkout@v2
    - run: rustup component add rustfmt
    - run: cargo fmt --all -- --check

  rust_dependencies:
    name: Check Rust dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        arguments: --manifest-path ittapi-rs/Cargo.toml

  rust_build:
    name: Check Rust crate
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        working-directory: ittapi-rs
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build Rust crate
      run: cargo build
    # On Windows, libclang.dll can be found in two places, including a mingw directory. As we're not
    # using any of mingw tools in our case, we can hide it by removing the library. See also:
    # https://github.com/actions/virtual-environments/issues/2208.
    - name: Hide spurious mingw directory (Windows only)
      shell: powershell
      run: Remove-Item -Path C:\msys64\mingw64\bin\libclang.dll -Force
      if: matrix.os == 'windows-latest'
    - name: Test Rust crate
      run: cargo test
    # For some strange reason, the process of building the upstream library will result in source
    # file changes on Windows; once this is resolved, remove `--allow-dirty`.
    - name: Check crate is publishable
      run: cargo publish --dry-run --allow-dirty
